{"_id":"0VaC4HrwOfYvb9er","name":"Conditions","type":"script","author":"ssK6qqhMHUvM1A06","img":"https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/conditions/slowed.webp","scope":"global","command":"// macro to apply and remove conditions\n// supports custom durations.\n// Major credit to @Freeze for the base,\n// as well as all the styling.\n\nif(!token) return ui.notifications.warn(\"No token selected.\");\nconst {controlled} = canvas.tokens;\n//if(canvas.tokens.controlled.length > 1) return ui.notifications.warn(\"More than 1 token selected, please select only 1 token.\");\n\n\nconst contentStyle = `<style>\n        #condition-dialog .dialog-buttons {\n            height: 30px;\n        }\n        #condition-dialog .span-conditions-applied {\n            box-shadow: 2px 2px rgba(0, 0, 0, 0.3);\n            margin-top: 5px;\n            margin-left: 5px;\n            border: 1px solid transparent;\n            background: #6c757d;\n            color: #fff;\n            display: flex;\n            border-radius: .25rem;\n            align-items: center;\n            justify-content: flex-start;\n        }\n        \n\t#condition-dialog .span-conditions-applied img{\n\t    width: 25px;\n\t    height: 25px;\n\t    margin-right:10px;\n\t}\n        #condition-dialog li {\n            display: grid;\n            grid-template-columns: auto auto auto;\n        }\n        #condition-dialog input[type=\"checkbox\"][id^=\"condition\"] {\n            display: none;\n        }\n        #condition-dialog .span-box {\n            box-shadow: 2px 2px rgba(0, 0, 0, 0.3);\n            margin-top: 5px;\n            margin-left: 5px;\n            background: #dfdcd3;\n            color: #111;\n            display: flex;\n            border-radius: .25rem;\n            align-items: center;\n            justify-content: flex-start;\n        }\n        #condition-dialog .span-box.active{\n            border: 1px solid #f00;\n            background:#ccc;\n            color:#111;\n        }\n        #condition-dialog .span-box::before {\n            background-color: white;\n            color: white;\n            content: \" \";\n            display: inline-block;\n            border-radius: 50%;\n            border: 1px solid grey;\n            position: relative;\n            left: 23px;\n            width: 20px;\n            height: 20px;\n            text-align: center;\n            line-height: 22px;\n            transition-duration: 0.4s;\n            transform: scale(0);\n        }\n\n        #condition-dialog .span-box img {\n            height: 25px;\n            width: 25px;\n            transition-duration: 0.2s;\n            transform-origin: 50% 50%;\n            background-color: #6c757d;\n            margin-right: 10px\n        }\n        \n        #condition-dialog :checked+.span-box {\n            border-color: #FF0000;\n        }\n        \n        #condition-dialog :checked+.span-box::before {\n            content: \"âœ“\";\n            background-color: grey;\n            transform: scale(1);\n        }\n        \n        #condition-dialog :checked+.span-box img {\n            transform: scale(0.8);\n            box-shadow: 0 0 5px #333;\n            z-index: -1;\n        }\n\t\t\n\tform .form-group > label {\n            flex: 1;\n\t}\n\t\t\n    </style>`;\n\n\nlet activeConditions;\nif(!getConditions(token).length) activeConditions = `<div style=\"height: 25px;\">No active conditions found...</div>`;\nelse{\n\tactiveConditions = CONFIG.statusEffects.reduce((acc, e) => {\n\t\tif(hasCondition(token, game.i18n.localize(e.label))) acc += `<label class=\"span-conditions-applied\"><img src=\"${e.icon}\" style=\"border:none\">${game.i18n.localize(e.label)}</label>`;\n\t\treturn acc;\n\t},\"<div><li>\") + \"</li></div>\";\n}\n\nlet conditionsList = CONFIG.statusEffects.reduce((acc, condition, i) => {\n\tlet active = \"\";\n\tfor(let token of controlled) if(hasCondition(token, game.i18n.localize(condition.label))) active = \"active\";\n    acc += `\n\t\t<input id=\"condition-${i+1}\" data-label=\"${game.i18n.localize(condition.label)}\" type=\"checkbox\" name=\"condition-checkbox\">\n\t\t<label class=\"span-box ${active}\" for=\"condition-${i+1}\"><img src=\"${condition.icon}\" style=\"border:none\" />${game.i18n.localize(condition.label)}</label>\n\t`;\n\treturn acc;\n}, \"<div style='height: auto;'><li>\") + \"</li></div>\";\n\nconst saveTypes = Object.entries(CONFIG.DND5E.abilities).reduce((acc, [key, value]) => acc += `<option value=\"${key}\">${value}</option>`, ``);\nlet content = contentStyle + (controlled.length === 1 ? `\n\t<form>\n\t\t<h2>Active Conditions on ${token.name}</h2>\n\t\t${activeConditions}\n\t\t<hr>\n\t\t<h2>Select Conditions for ${token.name}</h2>\n\t\t${conditionsList}\n\t</form>` : `<form><h2>Select conditions for controlled tokens</h2>${conditionsList}</form>`)\n\t + `<hr><form>\n\t<div class=\"form-group\">\n\t\t<label for=\"duration\">Effect duration</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<input id=\"duration\" type=\"number\"></input>\n\t\t\t<label for=\"units\">number&nbsp;of</label>\n\t\t\t<select id=\"units\">\n\t\t\t\t<option value=\"seconds\">seconds</option>\n\t\t\t\t<option value=\"minutes\">minutes</option>\n\t\t\t\t<option value=\"hours\">hours</option>\n\t\t\t\t<option value=\"days\">days</option>\n\t\t\t</select>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label for=\"is_save\">Saving Throw</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<input type=\"checkbox\" id=\"is_save\"></input>\n\t\t\t<label for=\"save_type\">Save&nbsp;Type</label>\n\t\t\t<select id=\"save_type\">${saveTypes}</select>\n\t\t\t<label for=\"save_dc\">DC</label>\n\t\t\t<input id=\"save_dc\" type=\"number\"></input>\n\t\t</div>\n\t</div>\n\t</form><hr>\n\t\t`;\nlet dialog = new Dialog({\n\ttitle: \"Conditions\",\n\tcontent,\n\tbuttons: {\n\t\tadd: {\n\t\t\tlabel: \"Add Condition(s)\",\n\t\t\tcallback: async (html) => {await addCondition(html)}\n\t\t},\n\t\tremove: {\n\t\t\tlabel: \"Remove Condition(s)\",\n\t\t\tcallback: async (html) => {await removeCondition(html)}\n\t\t},\n\t\tall: {\n\t\t\tlabel: \"Remove All\",\n\t\t\tcallback: async () => {await removeCondition()}\n\t\t}\n\t},\n\tdefault: \"add\"\n}, {\n\tid: \"condition-dialog\",\n\theight: \"100% !important\",\n\twidth: 500\n}).render(true);\n\n\nfunction hasCondition(token, name){\n\treturn !!token.actor.effects.find(i => CONFIG.statusEffects.find(j => game.i18n.localize(j.label) === name && j.icon === i.data?.icon)); \n}\n\nfunction getCondition(token, name){\n\treturn token.actor.effects.find(i => CONFIG.statusEffects.find(j => game.i18n.localize(j.label) === name && j.icon === i.data?.icon));\n}\n\nasync function addCondition(html){\n\t\n\tconst saveToResist = html[0].querySelector(\"input[id='is_save']\").checked;\n\tconst saveType = html[0].querySelector(\"select[id='save_type']\").value;\n\tconst saveDC = html[0].querySelector(\"input[id='save_dc']\").value;\n\t\n\tconst timeUnit = html[0].querySelector(\"select[id=units]\").value;\n\tlet duration = Number(html[0].querySelector(\"input[id=duration]\").value);\n\tduration = (isNaN(duration) || duration < 1) ? false : duration;\n\tconst selected = Array.from(html[0].querySelectorAll(\"input[name='condition-checkbox']\")).reduce((acc, e) => {\n\t\tif(e.checked) acc.push(CONFIG.statusEffects.find(i => game.i18n.localize(i.label) === e.getAttribute(\"data-label\")));\n\t\treturn acc;\n\t}, []);\n\t\n\tconst ev = event;\n\tfor(let token of controlled){\n\t\tconst effectData = selected.filter(i => !hasCondition(token, i.label)).map(i => {\n\t\t\tlet data = {...i, \"flags.core.statusId\": i.id};\n\t\t\tif(duration){\n\t\t\t\tlet timeMultiplier = timeUnit === \"seconds\" ? 1 : timeUnit === \"minutes\" ? 60 : timeUnit === \"hours\" ? 3600 : timeUnit === \"days\" ? 86400 : 1;\n\t\t\t\tdata[\"duration.seconds\"] = duration * timeMultiplier;\n\t\t\t}\n\t\t\treturn data;\n\t\t});\n\t\t// if save to resist, make a save; continue if success, otherwise apply effect.\n\t\tif(saveToResist){\n\t\t\tconst saved = await save_or_suck(token, saveType, saveDC, ev);\n\t\t\tif(saved) continue;\n\t\t}\n\t\t//const overlayDead = !!effectData.find(i => i.id === \"dead\");\n\t\t\n\t\tawait token.actor.createEmbeddedDocuments(\"ActiveEffect\", effectData);\n\t\t//if(overlayDead) await token._toggleOverlayEffect(effectData.find(i => i.id === \"dead\").icon, {active: true});\n\t}\n}\n\nasync function removeCondition(html){\n\tif(!html){\n\t\t// delete all conditions\n\t\tfor(let token of controlled){\n\t\t\tconst conditionIds = getConditions(token).map(i => i.id);\n\t\t\tawait token.actor.deleteEmbeddedDocuments(\"ActiveEffect\", conditionIds);\n\t\t}\n\t\treturn;\n\t}\n\tfor(let token of controlled){\n\t\tconst selected = Array.from(html[0].querySelectorAll(\"input[name='condition-checkbox']\")).reduce((acc, e) => {\n\t\t\tif(e.checked && hasCondition(token, e.getAttribute(\"data-label\"))) acc.push(getCondition(token, e.getAttribute(\"data-label\")));\n\t\t\treturn acc;\n\t\t}, []);\n\t\tconst conditionIds = selected.map(i => i.id);\n\t\tawait token.actor.deleteEmbeddedDocuments(\"ActiveEffect\", conditionIds);\n\t}\n}\n\nfunction getConditions(token){\n\treturn token.actor.effects.filter(i => CONFIG.statusEffects.find(j => game.i18n.localize(j.label) === i.data?.label && j.icon === i.data?.icon));\n}\n\nasync function save_or_suck(token, type, dc, evnt){\n\t// return true or false.\n\tconst {total} = await token.actor.rollAbilitySave(type, {event: evnt});\n\treturn total >= dc;\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.z4TdyNyc1nuxF7Dx"}}}
{"name":"Pack Attack","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/environment/people/charge.webp","scope":"global","command":"// pack attack\nif(new Set(canvas.tokens.controlled.map(i => i.actor.id)).size !== 1) return;\n\nconst pack = canvas.tokens.controlled.map(i => i.actor);\nconst leader = pack[0];\nconst attacks = leader.items.filter(i => i.hasAttack);\nconst options = attacks.reduce((acc, e) => acc += `<option value=\"${e.id}\">${e.name}</option>`, ``);\nconst content = `\n\t<p>Choose pack attack for: ${leader.name}</p>\n\t<hr>\n\t<form>\n\t\t<div class=\"form-group\">\n\t\t\t<select id=\"attack\">${options}</select>\n\t\t</div>\n\t</form>\n\t<hr>`;\n\nnew Dialog({\n\ttitle: \"Pack Attack!\",\n\tcontent,\n\tbuttons: {\n\t\tgo: {\n\t\t\ticon: `<i class=\"fas fa-check\"></i>`,\n\t\t\tlabel: \"Attack <br> (Hold Ctrl, Shift, or Alt)\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst item = leader.items.get(html[0].querySelector(\"select[id='attack']\").value);\n\t\t\t\titem.displayCard();\n\t\t\t\tfor(let i = 0; i < pack.length; i++) item.rollAttack({event});\n\t\t\t\tif(item.hasDamage) for(let i = 0; i < pack.length; i++) item.rollDamage();\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"go\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.4ghpmWRVTnNO7eBB"}},"_id":"0dzCVAXlgF7Zwuk5"}
{"_id":"4a1ctIs0PFhoG8hA","name":"_LandingPage - Friends","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/svg/dice-target.svg","scope":"global","command":"const {x, y, cancelled} = await warpgate.crosshairs.show();\nif(cancelled) return;\n\nconst duration = 24000;\nconst spriteOffset = {x: 105, y: 105};\nconst spriteOffsetSmall = {x: spriteOffset.x - 5, y: spriteOffset.y - 5};\nconst opacity = 0.3;\n\nconst sequenceSteed = new Sequence()\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowFriendDog.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: -35, to: 360-35, duration})\n\t\t.spriteOffset(spriteOffset)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(1, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowFriendOctopus.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 0, to: 360, duration})\n\t\t.spriteOffset(spriteOffset)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(1, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowFriendRaccoon.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 35, to: 360+35, duration})\n\t\t.spriteOffset(spriteOffset)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(1, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.play()\n\nconst sequenceKnight = new Sequence()\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowCrow.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180-50, to: 360+180-50, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowFrog.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180-30, to: 360+180-30, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowLizard.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180-10, to: 360+180-10, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowRat.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180+10, to: 360+180+10, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowSandpiper.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180+30, to: 360+180+30, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.effect()\n\t\t.file('https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/players/arkorowSeagull.webp')\n\t\t.atLocation({x,y})\n\t\t.persist()\n\t\t.loopProperty(\"spriteContainer\", \"rotation\", {from: 180+50, to: 360+180+50, duration})\n\t\t.spriteOffset(spriteOffsetSmall)\n\t\t.zeroSpriteRotation(true)\n\t\t.size(0.5, {gridUnits: true})\n\t\t.opacity(opacity)\n\t.play()","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.Y6F9oiLFCdNkoAyp"}}}
{"_id":"5RDVdU0hubpQK3fo","name":"Divine Intervention","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/holy/prayer-hands-glowing-yellow-white.webp","scope":"global","command":"// set up dialog components\nconst alias = \"The Pantheon\";\nconst actorName = \"The Party\";\nconst title = \"Divine Intervention\";\n\nconst partyBus = game.actors.getName(actorName);\nconst featureNames = {\n\tintervention: \"Divine Intervention\",\n\tinspiration: \"Divine Inspiration\"\n}\nconst feature =  {\n\tintervention: partyBus.items.getName(featureNames.intervention),\n\tinspiration: partyBus.items.getName(featureNames.inspiration)\n}\n\nconst targetValue = Math.floor(game.actors.filter(i => {\n\treturn i.data.folder === game.folders.getName(\"Player Characters\").id;\n}).map(i => {\n\treturn i.data.data.abilities.pty.value;\n}).reduce((acc, e) => acc += e, 0) / 2);\nconst buttons = {\n\t\"intervene flexrow\": {\n\t\tlabel: getLabel(\"ankh\", \"Intervention\"),\n\t\tcallback: () => intervene()\n\t},\n\t\"inspire flexrow\": {\n\t\tlabel: getLabel(\"star-half-alt\", \"Inspiration\"),\n\t\tcallback: () => inspire()\n\t},\n\t\"reset flexrow\": {\n\t\tlabel: getLabel(\"undo\", \"Reset\"),\n\t\tcallback: () => reset()\n\t},\n\t\"cancel flexrow\": {\n\t\tlabel: getLabel(\"ban\", \"Cancel\")\n\t}\n};\n\n// create dialog\nlet dialog = new Dialog({\n\ttitle: \"Divine Intervention\",\n\tbuttons,\n\tcontent: getStyle(),\n\trender: (html) => {\n\t\thtml.css(\"height\", \"auto\");\n\t\tdialog.element[0].querySelector(\".dialog-buttons\").style.flexDirection = \"column\";\n\t}\n}).render(true);\n\nfunction getStyle(){\n\tconst style = `\n\t<style>\n\t\n\t.dialog .dialog-buttons button {\n\t\tmargin: 0 5px 5px 0;\n\t\talign-items: center;\n\t}\n\t\n\t.dialog .dialog-button.flexrow .button-label {\n\t\tfont-size: 25px;\n\t}\n\t\n\t.dialog .dialog-buttons button:last-child {\n\t\tmargin-bottom: 0;\n\t}\n\t\n\t.dialog .dialog-button.intervene:hover {\n\t\tcolor: black;\n\t\tbackground-color: mintcream;\n\t}\n\t\n\t.dialog .dialog-button.inspire:hover {\n\t\tcolor: black;\n\t\tbackground-color: mintcream;\n\t}\n\t\n\t.dialog .dialog-button.reset:hover {\n\t\tcolor: black;\n\t\tbackground-color: mintcream;\n\t}\n\t\n\t.dialog .dialog-button.cancel:hover {\n\t\tcolor: black;\n\t\tbackground-color: mintcream;\n\t}\n\t\n\t.dialog .fas.divine-intervention {\n\t\tfont-size: 40px;\n\t\tpadding-top: 7px;\n\t}\n\t</style>`;\n\t\n\treturn style;\n}\n\nfunction getLabel(fas, lab){\n\treturn `\n\t<div><i class=\"fas divine-intervention fa-${fas}\"></i></div>\n\t<div class=\"button-label\">${lab}</div>`;\n}\n\n\n// intervene function\nasync function intervene(){\n\tconst roll = await feature.intervention.roll({configureDialog: false, createMessage: false});\n\tif(!roll) return;\n\t\n\tconst content = `\n\t<div class=\"dnd5e chat-card item-card\">\n\t\t<header class=\"card-header\" style=\"text-align: center;\">\n\t\t\t<img src=\"${feature.intervention.data.img}\" title=\"${feature.intervention.data.name}\" width=\"72\" height=\"72\">\n\t\t\t<hr>\n\t\t\t<h3 class=\"item-name\">${feature.intervention.data.name}</h3>\n\t\t</header>\n\t\t\n\t\t<div class=\"card-content\">\n\t\t\t${feature.intervention.data.data.description.value}\n\t\t</div>\n\t\t\n\t\t<footer class=\"card-footer\">\n\t\t\tTarget value: ${targetValue}\n\t\t</footer>\n\t</div>`;\n\t\n\tawait ChatMessage.create({content, speaker: {alias}});\n\tawait new Roll(\"1d100\").toMessage({flavor: title, speaker: {alias}});\n}\n\n// inspire function\nasync function inspire(){\n\tconst roll = await feature.inspiration.roll({configureDialog: false, createMessage: false});\n\tif(!roll) return;\n\t\n\tconst content = `\n\t<div class=\"dnd5e chat-card item-card\">\n\t\t<header class=\"card-header\" style=\"text-align: center;\">\n\t\t\t<img src=\"${feature.inspiration.data.img}\" title=\"${feature.inspiration.data.name}\" width=\"72\" height=\"72\">\n\t\t\t<hr>\n\t\t\t<h3 class=\"item-name\">${feature.inspiration.data.name}</h3>\n\t\t</header>\n\t\t\n\t\t<div class=\"card-content\">\n\t\t\t${feature.inspiration.data.data.description.value}\n\t\t</div>\n\t\t\n\t\t<footer class=\"card-footer\">\n\t\t\tUses ${feature.inspiration.data.data.uses.value} / ${feature.inspiration.data.data.uses.max}\n\t\t</footer>\n\t</div>`;\n\t\n\tawait ChatMessage.create({content, speaker: {alias}});\n}\n\n// reset function\nasync function reset(){\n\tconst updates = Object.values(feature).map(i => ({_id: i.id, \"data.uses.value\": i.data.data.uses.max}));\n\tawait partyBus.updateEmbeddedDocuments(\"Item\", updates);\n\t\n\tconst content = `\n\t<div class=\"dnd5e chat-card item-card\">\n\t\t<header class=\"card-header\" style=\"text-align: center;\">\n\t\t\t<img src=\"${feature.intervention.data.img}\" title=\"${feature.intervention.data.name}\" width=\"72\" height=\"72\">\n\t\t\t<hr>\n\t\t\t<h3 class=\"item-name\">${feature.intervention.data.name}</h3>\n\t\t</header>\n\t\t\n\t\t<div class=\"card-content\">\n\t\t\t${feature.intervention.data.name} has reset!\n\t\t\t<br>\n\t\t\t${feature.inspiration.data.name} has reset!\n\t\t</div>\n\t\t\n\t\t<footer class=\"card-footer\"\n\t\t</footer>\n\t</div>`;\n\t\n\tawait ChatMessage.create({content, speaker: {alias}});\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.bFD2d2cvtWlVIr6j"}}}
{"name":"ShowURL","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/skills/trades/academics-astronomy-navigation-purple.webp","scope":"global","command":"new Dialog({\n title: \"Share Image via URL\",\n content: `\n  <form>\n   <div class=\"form-group\">\n    <label for=\"image-url\">Image URL:</label>\n    <input type=\"text\" id=\"image-url\"/>\n   </div>\n  </form>`,\n buttons: {\n  yes: {\n   icon: `<i class=\"fas fa-check\"></i>`,\n   label: \"Share\",\n   callback: (html) => {\n    const imageUrl = html[0].querySelector(\"input[id='image-url']\").value;\n    if(!imageUrl) return ui.notifications.info(\"You did not provide a valid image.\");\n    const ip = new ImagePopout(imageUrl);\n    ip.render(true);\n    ip.shareImage();\n   }\n  }\n },\n default: \"yes\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":2,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.isvi0zzCaJ9wd2yo"}},"_id":"BAJXD6DmjJeaDOAp"}
{"_id":"DeSjkdYAIcCojfdS","name":"Carousing","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/consumables/drinks/alcohol-beer-mug-yellow.webp","scope":"global","command":"const table = await ZHELL.catalog.from(\"rolltables\", \"Carousing\", false);\n\nconst players = game.users.filter(i => i.getFlag(\"world\", \"player-account\"));\nconst combinedLevel = players.reduce((acc, e) => acc += e.character.data.data.details.level, 0);\nconst partyLevel = Math.floor(combinedLevel / players.length);\n\nconst roll = new Roll(`1d100 + ${partyLevel}`);\nconst rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\nawait table.draw({roll, rollMode});","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.VVZZpL6nfiteM1xU"}}}
{"_id":"DkeLPM1sDFaZGKxk","name":"_spawn template immediate","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\nfunction toDegrees(rads) {\n    return (rads * 180 / Math.PI) + 90;\n}\n\nif(!token) return ui.notifications.info(\"no token selected\")\n\nconst rayLengthFt = 30;\nconst rayLengthPx = canvas.grid.size * rayLengthFt / canvas.scene.data.gridDistance;\nconst startPoint = {x: token.center.x, y: token.center.y};\nlet angle = 0;\nlet start = 0;\nlet request;\nconst fill = game.user.data.color;\n\nasync function onLoad(){\n    let rayLine = new PIXI.Graphics();\n    rayLine.position.set(startPoint.x, startPoint.y);\n    rayLine.lineStyle(15, fill.replace(\"#\",\"0x\"), 0.5)\n       .moveTo(0, 0)\n       .lineTo(0, rayLengthPx);\n    rayLine.name = \"tempRay\";\n    canvas.app.stage.addChild(rayLine);\n    requestAnimationFrame(step);\n}\nfunction step(timestamp) {\n    let marker = canvas.app.stage.children.find(c => c.name == \"tempRay\");\n    if (start === 0) start = timestamp;\n    const elapsed = timestamp - start;\n    const mousePos = canvas.app.renderer.plugins.interaction.mouse.getLocalPosition(canvas.app.stage);\n    angle = mousePos.x === startPoint.x ? toDegrees(Math.PI / 2): \n                  mousePos.x > startPoint.x ? toDegrees(Math.PI - Math.atan((startPoint.y - mousePos.y)/(mousePos.x - startPoint.x))):\n                  mousePos.x < startPoint.x ? toDegrees(Math.atan((mousePos.y - startPoint.y)/(mousePos.x - startPoint.x))) : 0;//Math.ceil(elapsed * 360 / 1000);\n    marker.angle = angle\n    if (elapsed < 1000) request = requestAnimationFrame(step);\n    else { \n        start = 0;\n        console.log(angle)\n        request = requestAnimationFrame(step);\n    }\n}\n\nfunction offSet(angle){\n\tconst halfGrid = canvas.grid.size / 2;\n\tconst angleR = Math.round(angle/45)*45;\n\tconsole.log(angleR);\n\tlet x, y;\n\t\n\tswitch(angleR){ // set x offset first\n\t\tcase 0:\n\t\tcase 180:\n\t\tcase 360:\n\t\t\tx = 0;\n\t\t\tbreak;\n\t\tcase 45:\n\t\tcase 90:\n\t\tcase 135:\n\t\t\tx = -halfGrid;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tx = halfGrid;\n\t}\n\tswitch(angleR){ // set y offset\n\t\tcase 0:\n\t\tcase 45:\n\t\tcase 315:\n\t\tcase 360:\n\t\t\ty = halfGrid;\n\t\t\tbreak;\n\t\tcase 135:\n\t\tcase 180:\n\t\tcase 225:\n\t\t\ty = -halfGrid;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ty = 0;\n\t}\n\t\n\tconsole.log(x);\n\tconsole.log(y);\n\t\n\treturn [x,y];\n}\n\n\n\nawait PIXI.Loader.shared\n    .load(onLoad);\n\nawait wait(500);\n\n$(document.body).on(\"click\", async () => {\n    $(document.body).off(\"click\");\n    cancelAnimationFrame(request);\n    canvas.app.stage.removeChild(canvas.app.stage.children.find(c => c.name === \"tempRay\"));\n\t\n\tlet template_data = {\n\t\tt: 'ray',\n\t\tuser: game.userId,\n\t\tdirection: angle + 90,\n\t\tdistance: rayLengthFt,\n\t\twidth: 5,\n\t\tx: startPoint.x + offSet(angle)[0],\n\t\ty: startPoint.y + offSet(angle)[1],\n\t\tborderColor: '#000000',\n\t\tfillColor: '#3898B9'\n\t};\n\tlet ranges = await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [template_data]);\n});","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_4i202gw72r8","path":"[Unused/unfinished]","color":"#000000"},"core":{"sourceId":"Compendium.world.my-macros.4YlF9EQ1kwGMwDoz"}}}
{"_id":"E2o8Bp6iyYj4cK0d","name":"Bandit Generator","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/environment/people/archer.webp","scope":"global","command":"/* Random bandit generator.\n- Requires Warpgate.\n*/\n\n/* DIFFICULTY */\nconst content = `\n\t<form>\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"difficulty\">Pick difficulty:</label>\n\t\t\t<div class=\"form-fields\">\n\t\t\t\t<select id=\"difficulty\">\n\t\t\t\t\t<option value=\"medium\">Medium</option>\n\t\t\t\t\t<option value=\"easy\">Easy</option>\n\t\t\t\t\t<option value=\"veteran\">Veteran</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"cr\">Pick CR:</label>\n\t\t\t<div class=\"form-fields\">\n\t\t\t\t<input id=\"cr\" type=\"number\" value=\"1\" data-dtype=\"Number\" min=\"1\" max=\"20\" oninput=\"validity.valid || (value=1)\" placeholder=\"1\" value=\"1\"></input>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"qty\">Pick number:</label>\n\t\t\t<div class=\"form-fields\">\n\t\t\t\t<input id=\"qty\" type=\"number\" value=\"1\" data-dtype=\"Number\" min=\"1\" max=\"20\" oninput=\"validity.valid || (value=1)\" placeholder=\"10\" value=\"10\"></input>\n\t\t\t\t<input id=\"leader\" type=\"checkbox\" id=\"leader\" checked></input>\n\t\t\t\t<span class=\"sep\">Leader</span>\n\t\t\t</div>\n\t\t</div>\n\t</form>`;\n\nconst available_races = ['Aarakocra', 'Human', 'Dragonborn', 'Tiefling', 'Dwarf', 'Genasi', 'Aasimar', 'Elf', 'Half-elf', 'Half-orc', 'Caithuna'];\nconst available_resistances = Object.keys(CONFIG.DND5E.damageResistanceTypes);\nconst itemPack = game.packs.get(\"zhell-custom-stuff.catalog-of-items\");\nconst itemIndex = await itemPack.getIndex({fields: [\"type\", \"data.armor.type\", \"data.rarity\", \"data.weaponType\", \"data.baseItem\"]});\nconst armorIndexFiltered  = itemIndex.filter(i => i.data.rarity === \"common\" && i.type === \"equipment\");\nconst weaponIndexFiltered = itemIndex.filter(i => i.data.rarity === \"common\" && i.type === \"weapon\" && [\"simpleM\", \"simpleR\", \"martialM\", \"martialR\"].includes(i.data.weaponType) && i.data.baseItem && i.data.baseItem !== \"\");\nconst feature_names = [\"Reckless Attack\", \"Action Surge\", \"Pack Tactics\", \"Bonus Action Dash\", \"Martial Training\", \"Attentive\", \"Petty\", \"Scrappy\"];\nconst feature_keep_pre = Array(feature_names.length).fill(warpgate.CONST.DELETE)\nconst prefix = `https://assets.forge-vtt.com/6031826c83ef59f0ff7fedfa/images/monsters/bandit_tokens/bandit_`;\n\n// NAMES\nconst part_1_M = [\"Aet\", \"Ak\", \"Am\", \"Aran\", \"And\", \"Ar\", \"Ark\", \"Bar\", \"Car\", \"Cas\", \"Dam\", \"Dhar\", \"Eb\", \"Ek\", \"Er\", \"Gar\", \"Gu\", \"Gue\", \"Hor\", \"Ia\", \"Ka\", \"Kai\", \"Kar\", \"Kil\", \"Kos\", \"Ky\", \"Loke\", \"Mal\", \"Male\", \"Mav\", \"Me\", \"Mor\", \"Neph\", \"Oz\", \"Ral\", \"Re\", \"Rol\", \"Sal\", \"Sha\", \"Sir\", \"Ska\", \"The\", \"Thy\", \"Thyne\", \"Ur\", \"Uri\", \"Val\", \"Xar\", \"Zar\", \"Zer\", \"Zher\", \"Zor\"];\nconst part_2_M = [\"adius\", \"akas\", \"akos\", \"char\", \"cis\", \"cius\", \"dos\", \"emon\", \"ichar\", \"il\", \"ilius\", \"ira\", \"lech\", \"lius\", \"lyre\", \"marir\", \"menos\", \"meros\", \"mir\", \"mong\", \"mos\", \"mus\", \"non\", \"rai\", \"rakas\", \"rakir\", \"reus\", \"rias\", \"ris\", \"rius\", \"ron\", \"ros\", \"rus\", \"rut\", \"shoon\", \"thor\", \"thos\", \"thus\", \"us\", \"venom\", \"vir\", \"vius\", \"xes\", \"xik\", \"xikas\", \"xire\", \"xius\", \"xus\", \"zer\", \"zire\"];\nconst part_1_F = [\"Af\", \"Agne\", \"Ani\", \"Ara\", \"Ari\", \"Aria\", \"Bel\", \"Bri\", \"Cre\", \"Da\", \"Di\", \"Dim\", \"Dor\", \"Ea\", \"Fri\", \"Gri\", \"His\", \"In\", \"Ini\", \"Kal\", \"Le\", \"Lev\", \"Lil\", \"Ma\", \"Mar\", \"Mis\", \"Mith\", \"Na\", \"Nat\", \"Ne\", \"Neth\", \"Nith\", \"Ori\", \"Pes\", \"Phe\", \"Qu\", \"Ri\", \"Ro\", \"Sa\", \"Sar\", \"Seiri\", \"Sha\", \"Val\", \"Vel\", \"Ya\", \"Yora\", \"Yu\", \"Za\", \"Zai\", \"Ze\"];\nconst part_2_F = [\"bis\", \"borys\", \"cria\", \"cyra\", \"dani\", \"doris\", \"faris\", \"firith\", \"goria\", \"grea\", \"hala\", \"hiri\", \"karia\", \"ki\", \"laia\", \"lia\", \"lies\", \"lista\", \"lith\", \"loth\", \"lypsis\", \"lyvia\", \"maia\", \"meia\", \"mine\", \"narei\", \"nirith\", \"nise\", \"phi\", \"pione\", \"punith\", \"qine\", \"rali\", \"rissa\", \"seis\", \"solis\", \"spira\", \"tari\", \"tish\", \"uphis\", \"vari\", \"vine\", \"wala\", \"wure\", \"xibis\", \"xori\", \"yis\", \"yola\", \"za\", \"zes\"];\nconst virtue = [`\"Achievement\"`, `\"Adventure\"`, `\"Aid\"`, `\"Ambition\"`, `\"Anguish\"`, `\"Art\"`, `\"Ashes\"`, `\"Atonement\"`, `\"Awe\"`, `\"Bliss\"`, `\"Bright\"`, `\"Carrion\"`, `\"Carrior\"`, `\"Chant\"`, `\"Cheer\"`, `\"Cherish\"`, `\"Closed\"`, `\"Comfort\"`, `\"Compassion\"`, `\"Confidence\"`, `\"Content\"`, `\"Courage\"`, `\"Creed\"`, `\"Cunning\"`, `\"Darkness\"`, `\"Death\"`, `\"Debauchery\"`, `\"Deceit\"`, `\"Delight\"`, `\"Desire\"`, `\"Despair\"`, `\"Devotion\"`, `\"Dexterity\"`, `\"Different\"`, `\"Doom\"`, `\"Doubt\"`, `\"Dread\"`, `\"Ecstasy\"`, `\"End\"`, `\"Enduring\"`, `\"Ennui\"`, `\"Entropy\"`, `\"Essential\"`, `\"Esteem\"`, `\"Eternal\"`, `\"Euphoria\"`, `\"Excellence\"`, `\"Exceptional\"`, `\"Exciting\"`, `\"Expert\"`, `\"Expertise\"`, `\"Expressive\"`, `\"Extreme\"`, `\"Faith\"`, `\"Fear\"`, `\"Flawed\"`, `\"Free\"`, `\"Freedom\"`, `\"Fresh\"`, `\"Gentle\"`, `\"Gladness\"`, `\"Glee\"`, `\"Gloom\"`, `\"Glory\"`, `\"Gluttony\"`, `\"Grief\"`, `\"Happiness\"`, `\"Happy\"`, `\"Harmony\"`, `\"Hate\"`, `\"Hatred\"`, `\"Hero\"`, `\"Hope\"`, `\"Horror\"`, `\"Hunt\"`, `\"Hymn\"`, `\"Ideal\"`, `\"Ignominy\"`, `\"Immortal\"`, `\"Innovation\"`, `\"Interesting\"`, `\"Journey\"`, `\"Joy\"`, `\"Laughter\"`, `\"Life\"`, `\"Light\"`, `\"Love\"`, `\"Loyal\"`, `\"Lust\"`, `\"Mantra\"`, `\"Master\"`, `\"Mastery\"`, `\"Mayhem\"`, `\"Misery\"`, `\"Mockery\"`, `\"Murder\"`, `\"Muse\"`, `\"Music\"`, `\"Mystery\"`, `\"Normal\"`, `\"Nowhere\"`, `\"Odd\"`, `\"Open\"`, `\"Optimal\"`, `\"Pain\"`, `\"Panic\"`, `\"Passion\"`, `\"Perfect\"`, `\"Piety\"`, `\"Pleasure\"`, `\"Poetry\"`, `\"Possession\"`, `\"Promise\"`, `\"Psalm\"`, `\"Pure\"`, `\"Quest\"`, `\"Random\"`, `\"Rare\"`, `\"Recovery\"`, `\"Redemption\"`, `\"Regular\"`, `\"Relentless\"`, `\"Respect\"`, `\"Reverence\"`, `\"Revulsion\"`, `\"Sadness\"`, `\"Sanctity\"`, `\"Silence\"`, `\"Skilled\"`, `\"Sly\"`, `\"Song\"`, `\"Sorrow\"`, `\"Suffering\"`, `\"Temerity\"`, `\"Terror\"`, `\"Timeless\"`, `\"Torment\"`, `\"Tragedy\"`, `\"Trickery\"`, `\"Trouble\"`, `\"Trust\"`, `\"Truth\"`, `\"Uncommon\"`, `\"Unlocked\"`, `\"Vice\"`, `\"Virtue\"`, `\"Void\"`, `\"Voyage\"`, `\"Weary\"`, `\"Winning\"`, `\"Wit\"`, `\"Woe\"`];\n\nconst {difficulty, cr, qty, leader} = await new Promise(resolve => {\n    new Dialog({\n        title: 'Pick stats',\n        content,\n        buttons: {\n            one: {\n                icon: `<i class=\"fas fa-check\"></i>`,\n                label: \"Done\",\n                callback: (html) => {\n                    resolve({\n\t\t\t\t\t\tdifficulty: html[0].querySelector(\"select[id=difficulty]\").value,\n\t\t\t\t\t\tcr: Number(html[0].querySelector(\"input[id=cr]\").value),\n\t\t\t\t\t\tqty: Number(html[0].querySelector(\"input[id=qty]\").value),\n\t\t\t\t\t\tleader: html[0].querySelector(\"input[id=leader]\").checked\n\t\t\t\t\t});\n                }\n            }\n        },\n        default: \"one\"\n    }).render(true);\n});\nif(!difficulty || !cr || !qty) return;\n\nconst ability_score_CR_bonus = Math.round(cr/4)\nconst ability_score_bonus = difficulty === \"easy\" ? -2 : difficulty === \"veteran\" ? 2 : 0\nconst weaponsAmount = difficulty === \"veteran\" ? 3 : 2\nif(difficulty === \"easy\")    feature_keep_pre[0] = \"\";\nif(difficulty === \"medium\")  feature_keep_pre[0] = feature_keep_pre[1] = \"\";\nif(difficulty === \"veteran\") feature_keep_pre[0] = feature_keep_pre[1] = feature_keep_pre[2] = \"\";\n\n\n// CONSTANTS\nconst updatesArray = Array(qty);\nfor(let bn = 0; bn < qty; bn++){\n\tupdatesArray[bn] = {actor: {\"data.details.cr\": cr}, token: {}, embedded: {Item: {}}};\n}\n\n// RACE\nfor(let bn = 0; bn < qty; bn++){\n\tlet race = available_races[Math.floor(Math.random() * available_races.length)];\n\tlet movement = {walk: 30, climb: 0, fly: 0, swim: 0};\n\tif(['Aarakocra'].includes(race)) movement.walk = 25;\n\tif(['Aarakocra', 'Aasimar'].includes(race)) movement.fly = 30;\n\tif(['Tabaxi'].includes(race)) movement.climb = 20;\n\tif(['Elf'].includes(race)) movement.walk = 35;\n\t\n\n\tlet resistances = []\n\tif(['Dragonborn'].includes(race))    resistances = [available_resistances[Math.floor(Math.random() * available_resistances.length)]];\n\telse if(['Tiefling'].includes(race)) resistances = [[\"fire\", \"cold\"][Math.floor(Math.random() * 2)]];\n\telse if(['Genasi'].includes(race))   resistances = [[\"fire\"], [\"lightning\", \"thunder\"], [\"physical\"], [\"cold\"]][Math.floor(Math.random() * 4)];\n\telse if(['Aasimar'].includes(race))  resistances = [[\"radiant\", \"necrotic\"][Math.floor(Math.random() * 2)]];\n\n\tupdatesArray[bn].actor[\"data.attributes.movement\"] = movement;\n\tupdatesArray[bn].actor['data.details.type.subtype'] = race;\n\tupdatesArray[bn].actor['data.details.race'] = race;\n\tupdatesArray[bn].actor['data.traits.dr.value'] = resistances;\n\tupdatesArray[bn].actor['data.details.age'] = Math.max(10, 20 + (Math.floor(Math.random() * 15)));\n}\n\n/* < ABILITY SCORES >\n- STR, DEX, CON randomly allocated [18, 16, 14]\n- One high mental score of 15.\n- Rest low at 8.\n- Bonus of round(CR/4) to all scores.\nThree settings: easy, medium, veteran:\n- Easy: -2 to all scores.\n- Medium: +0 to all scores.\n- Veteran: +2 to all scores.\n*/\nfor(let bn = 0; bn < qty; bn++){\n\tconst ability_scores_physical = [14, 16, 18].map(i => ({ i, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ i }) => i); // shuffled\n\tconst ability_scores_mental = [8, 8, 15].map(i => ({ i, sort: Math.random() })).sort((a, b) => a.sort - b.sort).map(({ i }) => i); // shuffled\n\tconst ability_scores = ability_scores_physical.concat(ability_scores_mental).map(i => i + ability_score_bonus + ability_score_CR_bonus);\n\n\tupdatesArray[bn].actor['data.abilities.str.value'] = ability_scores[0];\n\tupdatesArray[bn].actor['data.abilities.dex.value'] = ability_scores[1];\n\tupdatesArray[bn].actor['data.abilities.con.value'] = ability_scores[2];\n\tupdatesArray[bn].actor['data.abilities.wis.value'] = ability_scores[3];\n\tupdatesArray[bn].actor['data.abilities.int.value'] = ability_scores[4];\n\tupdatesArray[bn].actor['data.abilities.cha.value'] = ability_scores[5];\n\n\t/* < HIT POINTS > 2d10 + CON for each CR. */\n\tconst formula = `${2 * cr}d10 + ${cr * Math.floor((ability_scores[2]-10)/2)}`;\n\tconst {total} = await new Roll(formula).evaluate({async: true});\n\tupdatesArray[bn].actor[\"data.attributes.hp\"] = {formula, max: total, value: total};\n}\n\n/* < ARMOR CLASS > Equipped armor. Random. */\nfor(let bn = 0; bn < qty; bn++){\n\tconst armor_roll = Math.floor(Math.random() * 100)\n\tconst armor_type = \n\t\tdifficulty === 'easy'    ? (armor_roll < 80 ? 'light' : armor_roll < 95 ? 'medium' : 'heavy') :\n\t\tdifficulty === 'medium'  ? (armor_roll < 40 ? 'light' : armor_roll < 80 ? 'medium' : 'heavy') :\n\t\tdifficulty === 'veteran' ? (armor_roll < 20 ? 'light' : armor_roll < 40 ? 'medium' : 'heavy') : 'error';\n\tif(armor_type === 'error') return ui.notifications.error(\"ERROR | armor_type\");\n\n\tconst armorIndexFilteredFurther = armorIndexFiltered.filter(i => [armor_type].includes(i.data.armor?.type))\n\tconst armorId = armorIndexFilteredFurther[Math.floor(Math.random() * armorIndexFilteredFurther.length)]._id\n\tconst armorUuid = await fromUuid(`Compendium.zhell-custom-stuff.catalog-of-items.${armorId}`)\n\tconst armorObject = armorUuid.toObject()\n\tarmorObject.data.equipped = true\n\tarmorObject.data.proficient = true\n\tupdatesArray[bn].embedded.Item[armorObject.name] = armorObject;\n}\n\n/* < WEAPONS > Random weapons. */\nfor(let bn = 0; bn < qty; bn++){\n\tconst weaponRolls = []\n\tconst weaponIds = []\n\tconst weaponUuids = []\n\tconst weaponObjects = []\n\tfor(let i = 0; i < weaponsAmount; i++){\n\t\tlet newRoll = Math.floor(Math.random() * weaponIndexFiltered.length)\n\t\twhile(weaponRolls.includes(newRoll)){\n\t\t\tnewRoll = Math.floor(Math.random() * weaponIndexFiltered.length)\n\t\t}\n\t\tweaponRolls.push(newRoll)\n\t\tweaponIds.push(weaponIndexFiltered[newRoll]._id)\n\t}\n\tfor(let wId of weaponIds){\n\t\tlet uuid = await fromUuid(`Compendium.zhell-custom-stuff.catalog-of-items.${wId}`)\n\t\tweaponUuids.push(uuid)\n\t}\n\tfor(let wUuid of weaponUuids){\n\t\tweaponObjects.push(wUuid.toObject())\n\t}\n\tfor(let wObj of weaponObjects){\n\t\tupdatesArray[bn].embedded.Item[wObj.name] = wObj\n\t}\n}\n\n/* < FEATURES > Keep one version of Extra Attack: +1 (medium), +2 (veteran). Keep 1-3 additional features depending on difficulty (1, 2, or 3). */\nfor(let bn = 0; bn < qty; bn++){\n\tconst feature_keep = feature_keep_pre.map(i => ({i, sort: Math.random()})).sort((a, b) => a.sort - b.sort).map(({i}) => i)\n\tfor(let i = 0; i < feature_names.length; i++){\n\t\tupdatesArray[bn].embedded.Item[feature_names[i]] = feature_keep[i];\n\t}\n\tupdatesArray[bn].embedded.Item['Extra Attack (+1)'] = ['easy', 'veteran'].includes(difficulty) ? warpgate.CONST.DELETE : '';\n\tupdatesArray[bn].embedded.Item['Extra Attack (+2)'] = ['easy', 'medium'].includes(difficulty)  ? warpgate.CONST.DELETE : '';\n}\n\n/* < SPELLS > Random cantrips and 1st? */\n//for(let bn = 0; bn < qty; bn++){}\n\n/* Name and gender. */\nfor(let bn = 0; bn < qty; bn++){\n\tlet race = updatesArray[bn].actor['data.details.race'];\n\t\n\tlet rnd = Math.floor(Math.random() * 7);\n\tconst gender = rnd < 1 ? 'Other' : rnd < 4 ? 'Male' : 'Female';\n\tconst genderShorthand = gender.at(0).toLowerCase()\n\t\n\tconst name =\n\t\tgender === 'Other' ? virtue[Math.floor(Math.random() * virtue.length)] :\n\t\tgender === 'Male' ? part_1_M[Math.floor(Math.random() * part_1_M.length)] + part_2_M[Math.floor(Math.random() * part_2_M.length)] :\n\t\tgender === 'Female' ? part_1_F[Math.floor(Math.random() * part_1_F.length)] + part_2_F[Math.floor(Math.random() * part_2_F.length)] : \"No Name Created\";\n\n\tupdatesArray[bn].token['name'] = name;\n\tupdatesArray[bn].actor['name'] = name;\n\tupdatesArray[bn].actor['data.details.gender'] = gender;\n\n\tlet randomLetter = ['f', 'm'][Math.floor(Math.random() * 2)];\n\tconst img = `${prefix}${race.toLowerCase()}_${genderShorthand === 'o' ? randomLetter : genderShorthand}.webp`;\n\t\n\tupdatesArray[bn].token['img'] = img;\n\tupdatesArray[bn].actor['img'] = img;\n}\n\nlet imagesToLoad = [];\nfor(let bn = 0; bn < qty; bn++){\n\tawait loadTexture(updatesArray[bn].actor.img);\n}\n\n/* Create Leader */\nif(leader){\n\tlet leaderObject = updatesArray[0];\n\tleaderObject.token[\"scale\"] = 1.45;\n\tleaderObject.actor[\"data.attributes.hp\"] = {\n\t\tvalue: Math.floor(1.5 * leaderObject.actor[\"data.attributes.hp\"].max),\n\t\tmax: Math.floor(1.5 * leaderObject.actor[\"data.attributes.hp\"].max)\n\t};\n\tleaderObject.actor[\"data.bonuses\"] = {\n\t\tmwak: {attack: \"1d4\", damage: \"1d4\"},\n\t\trwak: {attack: \"1d4\", damage: \"1d4\"},\n\t\tmsak: {attack: \"1d4\", damage: \"1d4\"},\n\t\trsak: {attack: \"1d4\", damage: \"1d4\"},\n\t\tabilities: {check: \"2\", save: \"2\"}\n\t};\n}\n\n/* SPAWNING */\nfor(let bn = 0; bn < qty; bn++){\n\tawait warpgate.spawn('BanditTemplate', updatesArray[bn])\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.WKOLnoiX17ipvkrL"}}}
{"name":"Create Combat CTRL-A","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/skills/targeting/crosshair-mark-rough-pink.webp","scope":"global","command":"const combat = !game.combat ? (await Combat.create({scene: canvas.scene.id, active: true})) : game.combat;\nconst combatants = canvas.tokens.placeables.filter(i => {\n    if(i.actor.getFlag(\"item-piles\", \"data.enabled\")) return false;\n    if(!!combat.combatants.find(c => c.data.tokenId === i.id)) return false;\n    return true;\n}).map(i => ({\n\ttokenId: i.id, hidden: i.data.hidden, actorId: i.actor.id, name: i.name\n}));\nawait combat.createEmbeddedDocuments(\"Combatant\", combatants);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.2czs0NpY9k3JNgBO"}},"_id":"FI2ZxhllAm7XXc2i"}
{"name":"Set Temp HP","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/life/heart-glowing-red.webp","scope":"global","command":"/**\n\tClick to set temporary hit points of selected tokens.\n\tShift-click to remove temporary hit points of selected tokens.\n**/\n\nif(event.shiftKey){\n\tfor(let tok of canvas.tokens.controlled) await tok.actor.update({\"data.attributes.hp.temp\" : null});\n\treturn;\n}\n\nnew Dialog({\n\ttitle: `Add temporary hit points`,\n\tcontent: `<input type=\"text\">`,\n\tbuttons: {\n\t\tgo: {\n\t\t\ticon: `<i class=\"fas fa-check\"></i>`,\n\t\t\tlabel: \"Apply\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst {value} = html[0].querySelector(\"input[type=text]\");\n\t\t\t\tfor(let tok of canvas.tokens.controlled){\n\t\t\t\t\tlet {temp} = tok.actor.getRollData().attributes.hp;\n\t\t\t\t\tawait tok.actor.update({\"data.attributes.hp.temp\" : Math.max(temp, value)});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"go\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.yesAZQ2b6GmtfanS"}},"_id":"Gf7yBgrCQEr3H7CK"}
{"_id":"H8cSLErKroMWwNSl","name":"Current Combatant","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/perception/eye-winged-pink.webp","scope":"global","command":"// close all sheets.\nObject.values(ui.windows).filter(w => w.document?.documentName.includes(\"Actor\")).forEach(w => w.close());\n\n// render current combatant.\ncanvas.tokens.get(game.combat?.current?.tokenId)?.actor.sheet.render(true);\n\n// select and pan to current combatant.\nconst tok = canvas.tokens.get(game.combat?.current?.tokenId);\ntok?.control();\ncanvas.pan(tok?.position);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.gL2Ufv7ozFIOPgzb"}}}
{"name":"NPC Save + Dmg","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/fire/explosion-embers-evade-silhouette.webp","scope":"global","command":"const tokens = canvas.tokens.controlled.filter(i => !i.actor.hasPlayerOwner);\nif(tokens.length < 1) return ui.notifications.warn(\"No valid tokens.\");\nconst names = tokens.map(i => i.name).join(\", \");\nconst options = Object.entries(CONFIG.DND5E.abilities).reduce((acc, [a,b]) => acc += `<option value=\"${a}\">${b}</option>`, ``);\nconst content = `\n  <p>Roll saves and apply damage to: ${names}.</p>\n  <hr>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"type\">Saving Throw</label>\n      <div class=\"form-fields\">\n        <select id=\"type\">${options}</select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"dc\">Difficulty</label>\n      <div class=\"form-fields\">\n        <input id=\"dc\" type=\"number\" min=\"1\" step=\"1.0\"></input>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"dmg\">Damage</label>\n      <div class=\"form-fields\">\n        <input id=\"dmg\" type=\"number\"></input>\n\t\t<input id=\"no\" type=\"checkbox\"></input>\n\t\t<label for=\"no\">No&nbsp;damage&nbsp;on&nbsp;success?</label>\n      </div>\n    </div>\n  </form>`;\n\nnew Dialog({\n\ttitle: \"Request Saving Throw\",\n\tcontent,\n\tbuttons: {\n\t\tyes: {\n\t\t\ticon: \"<i class='fas fa-check'></i>\",\n\t\t\tlabel: \"Save!\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst ev = event;\n\t\t\t\tconst type = html[0].querySelector(\"#type\").value;\n\t\t\t\tconst dc = Number(html[0].querySelector(\"#dc\").value);\n\t\t\t\tconst dmg = Number(html[0].querySelector(\"#dmg\").value);\n\t\t\t\tconst no = html[0].querySelector(\"#no\").checked;\n\t\t\t\tif(!dc) return ui.notifications.warn(\"Invalid DC.\");\n\t\t\t\tif(dmg < 1) return ui.notifications.warn(\"Invalid damage.\");\n\t\t\t\tfor(let t of tokens){\n\t\t\t\t\tlet {total} = await t.actor.rollAbilitySave(type, {event: ev});\n\t\t\t\t\tif(total < dc) await t.actor.applyDamage(dmg);\n\t\t\t\t\telse if(no) continue;\n\t\t\t\t\telse await t.actor.applyDamage(Math.floor(dmg/2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"yes\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.5SmGfHhD9yu1KEzf"}},"_id":"IHwrHVcWF3SK7Uho"}
{"_id":"MB6r7N6Th6yAwBDZ","name":"Rest Config","type":"script","author":"FRHavFG1029uVyVE","img":"icons/environment/settlement/house-two-stories-small.webp","scope":"global","command":"const content = `\n <p>Tick a box to enable the corresponding type of rest. If left unticked, type of rest is disabled.</p><hr>\n <form>\n  <div class=\"form-field\">\n   <div class=\"form-group\">\n    <label for=\"LR\"><strong>Long Rest:</strong></label>\n    <input type=\"checkbox\" ${game.settings.get(\"zhell-custom-stuff\", \"toggleLR\") ? '' : 'checked'} id=\"LR\"></input>\n   </div>\n   <div class=\"form-group\">\n    <label for=\"SR\"><strong>Short Rest:</strong></label>\n    <input type=\"checkbox\" ${game.settings.get(\"zhell-custom-stuff\", \"toggleSR\") ? '' : 'checked'} id=\"SR\"></input>\n   </div>\n  </div>\n </form><hr>`;\nconst title = \"Configure Rests\";\n\nnew Dialog({content, title,\n buttons: {\n  go: {\n   icon: `<i class=\"fas fa-check\"></i>`,\n   label: \"Set Rests\",\n   callback: async (html) => {\n    let SR = html[0].querySelector(\"input[id='SR']\").checked;\n    let LR = html[0].querySelector(\"input[id='LR']\").checked;\n    console.log(\"SR:\", SR, \"LR:\", LR);\n    await ZHELL.setting.toggleLR(!LR);\n    await ZHELL.setting.toggleSR(!SR);\n    ui.notifications.info(`SR: ${SR ? 'on' : 'off'} / LR: ${LR ? 'on' : 'off'}`);\n   }\n  }\n },\n default: \"go\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"FRHavFG1029uVyVE":3},"flags":{"core":{"sourceId":"Macro.mjpoalCD2666t5vr"}}}
{"name":"Rest","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/environment/settlement/tavern.webp","scope":"global","command":"// CLICK: long rest\n// SHIFT: short rest\n\nevent.shiftKey ? actor?.shortRest() : actor?.longRest();","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.VmUn0OVCNxlFTIvn"}},"_id":"Qt1zpeIOxRJyVERd"}
{"_id":"RSiwFe3IniEg8axF","name":"Display Languages","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/sundries/documents/document-official-capital.webp","scope":"global","command":"/* Display all players' languages.*/\n\nconst players = game.actors.filter(i => i.folder === game.folders.getName(\"Player Characters\"));\nif(!players.length) return;\n\nconst tableBody = players.reduce((actor_acc, actor) => {\n\tlet languages = [...actor.getRollData().traits.languages.value].map(i => CONFIG.DND5E.languages[i]);\n\tlet languagesCustom = actor.getRollData().traits.languages.custom.length > 0 ? [...actor.getRollData().traits.languages.custom.split(\";\")] : [];\n\tif(languagesCustom.length) languages = languages.concat(languagesCustom);\n\treturn actor_acc += languages.reduce((lang_acc, lang, i) => lang_acc += `<tr><td>${ i === 0 ? actor.name : \"\" }</td><td>${lang}</td></tr>`, ``);\n}, ``);\n\nconst content = `<table style=\"border: 0\">\n\t<thead><tr><td>Name</td><td>Languages</td></tr></thead>\n\t<tbody>${tableBody}</tbody>\n</table>`;\n\nChatMessage.create({content});","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.5esjjKrXVowQ1AoF"}}}
{"_id":"SF3Gtr0TU1jPcIow","name":"Roll for Rarity + Type","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/commodities/treasure/crown-gold-satin-gems-red.webp","scope":"global","command":"const tableRarity = await ZHELL.catalog.from(\"Random Loot: Rarity\", \"rolltables\", false);\nconst tableType = await ZHELL.catalog.from(\"Random Loot: Type\", \"rolltables\", false);\n\nconst players = game.users.filter(i => i.getFlag(\"world\", \"player-account\"));\nconst combinedLevel = players.reduce((acc, e) => acc += e.character.getRollData().details.level, 0);\nconst partyLevel = Math.floor(combinedLevel / players.length);\nconst roll = new Roll(`1d100 + ${partyLevel}`);\nconst rollMode = CONST.DICE_ROLL_MODES.PRIVATE;\n\nconst rarity = await tableRarity.draw({roll, rollMode, displayChat: false});\nconst type = await tableType.draw({rollMode, displayChat: false});\n\nChatMessage.create({\n content: `\n  <hr>\n  <div class=\"flexrow\"> <div></div> <div style=\"text-align:center\"><strong>RANDOM LOOT</strong></div> <div></div> </div>\n  <hr>\n  <div class=\"flexrow\"> <div><strong>Rarity</strong></div> <div style=\"text-align:center\">${rarity.results[0].getChatText()}</div> <div style=\"text-align:center\">${rarity.roll.total} <em>(${rarity.roll.formula})</em></div> </div>\n  <div class=\"flexrow\"> <div><strong>Type</strong></div> <div style=\"text-align:center\">${type.results[0].getChatText()}</div> <div style=\"text-align:center\">${type.roll.total} <em>(${type.roll.formula})</em></div> </div>\n  <hr>`,\n whisper: [game.user.id]\n});","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.2LVWUwIPKMnIthNc"}}}
{"_id":"TDpZ5dDwDnWYjm6s","name":"Change Wall Direction / Movement","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/environment/settlement/fence-stone-brick.webp","scope":"global","command":"if(!event.shiftKey){\n  const {BOTH, LEFT, RIGHT} = CONST.WALL_DIRECTIONS;\n  const updates = canvas.walls.controlled.map(i => {\n    let dir = BOTH;\n    if(i.document.data.dir === BOTH) dir = LEFT;\n    else if(i.document.data.dir === LEFT) dir = RIGHT;\n    return {_id: i.id, dir}\n  });\n  await canvas.scene.updateEmbeddedDocuments(\"Wall\", updates);\n}else{\n  const {NONE, NORMAL} = CONST.WALL_MOVEMENT_TYPES;\n  const updates = canvas.walls.controlled.map(i => ({_id: i.id, move: i.document.data.move === NONE ? NORMAL : NONE}));\n  await canvas.scene.updateEmbeddedDocuments(\"Wall\", updates);\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.LPU0nf4xjh9y4gXd"}}}
{"_id":"ULAF98853seobwSm","name":"Request: Initiative","type":"script","author":"FRHavFG1029uVyVE","img":"icons/skills/melee/weapons-crossed-swords-yellow.webp","scope":"global","command":"const action = async () => {\n  if(!game.user.isGM){\n    const tok = token ?? game.user.character?.getActiveTokens()[0];\n    if(!tok) return ui.notifications.warn(\"Need a token.\");\n    if(tok.combatant && tok.combatant.initiative !== null) return;\n    const {total} = await tok.actor.rollAbilityTest(\"dex\", {\n      chatMessage: true, event, parts: [tok.actor.data.data.attributes.init.value], flavor: `${tok.name} rolls for initiative!`\n    });\n    if(total === undefined || total === null) return;\n    if(!tok.combatant) await tok.toggleCombat();\n    await tok.combatant.update({initiative: total});\n  }else{\n    const toks = canvas.tokens.controlled;\n    if(toks.length < 1) return ui.notifications.warn(\"Need a token.\");\n    for(tok of toks){\n      if(tok.combatant && tok.combatant.initiative !== null) continue;\n      const {total} = await tok.actor.rollAbilityTest(\"dex\", {\n        chatMessage: false, event, parts: [tok.actor.data.data.attributes.init.value]\n      });\n      if(total === undefined || total === null) continue;\n      if(!tok.combatant) await tok.toggleCombat();\n      await tok.combatant.update({initiative: total});\n    }\n  }\n}\nconst description = `<p style=\"text-align:center\">Roll initiative!</p>`;\nconst img = \"icons/skills/melee/weapons-crossed-swords-yellow.webp\";\nconst label = \"Roll!\";\nconst title = \"Initiative\";\nconst limit = Requestor.LIMIT.FREE;\nconst context = {popout: true, autoClose: true};\nconst combat = game.combat ?? await Combat.create({scene: canvas.scene.id, active: true});\nawait Requestor.request({buttonData: [{action, label}], img, description, title, limit, context});","folder":null,"sort":0,"permission":{"default":0,"FRHavFG1029uVyVE":3},"flags":{"core":{"sourceId":"Macro.Ta0qxVege6hrHqe6"}}}
{"_id":"gTQ4CtlaUqAbncIC","name":"Foraging","type":"script","author":"FRHavFG1029uVyVE","img":"icons/containers/misc/wheelbarrow-white.webp","scope":"global","command":"// dialog:\n// select number of hours,\n// select skill or tool.\n\n// create chat message with roll results.\nconst actor = game.user.character ?? canvas.tokens.controlled[0]?.actor;\nif(!actor || actor.isToken) return;\nconst herbKits = actor.itemTypes.tool.filter(i => i.data?.data?.baseItem === \"herb\");\nconst hasHerbKit = herbKits.length > 0 ? herbKits[0] : null;\nconst options = ((hasHerbKit?.data.data.proficient > 0) ? `<option value=\"${hasHerbKit.id}\">${hasHerbKit.name}</option>` : \"\") + `<option value=\"nat\">Nature</option><option value=\"sur\">Survival</option>`;\nconst targetValue = game.settings.get(\"zhell-custom-stuff\", \"foragingDC\");\nnew Dialog({\n\ttitle: \"Foraging\",\n\tcontent: `\n\t\t<p>You are attempting to forage for materials. Please input the number of hours, and select your method of foraging.</p>\n\t\t<p style=\"text-align:center\">The current DC is <strong>${targetValue}</strong>.</p>\n\t\t<hr>\n\t\t<form>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"num\">Hours of foraging:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tid=\"num\"\n\t\t\t\t\tplaceholder=\"1\"\n\t\t\t\t\tdata-dtype=\"Number\"\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tmax=\"24\"\n\t\t\t\t\toninput=\"validity.valid || (value=1)\"\n\t\t\t\t></input>\n\t\t\t</div>\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<label for=\"select\">Select skill or tool:</label>\n\t\t\t\t<select id=\"select\">${options}</select>\n\t\t\t</div>\n\t\t</form><hr>`,\n\tbuttons: {\n\t\tgo: {\n\t\t\ticon: `<i class=\"fas fa-check\"></i>`,\n\t\t\tlabel: \"Forage<br><em>(Hold shift/ctrl/alt to fast-forward all rolls)</em>\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst selection = html[0].querySelector(\"select[id=select]\").value;\n\t\t\t\tconst num = Number(html[0].querySelector(\"input[id=num]\").value || 1);\n\t\t\t\tif(isNaN(num) || num < 1) return;\n\t\t\t\tconst ev = event;\n\t\t\t\tlet counter = 0;\n\t\t\t\tif(selection.length > 3){\n\t\t\t\t\t// roll tool.\n\t\t\t\t\tconst tool = actor.items.get(selection);\n\t\t\t\t\tfor(let i = 0; i < num; i++){\n\t\t\t\t\t\tconst {total} = await tool.rollToolCheck({event: ev, targetValue, fumble: -1, critical: 21});\n\t\t\t\t\t\tif(total >= targetValue) counter++;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t// roll skill.\n\t\t\t\t\tfor(let i = 0; i < num; i++){\n\t\t\t\t\t\tconst {total} = await actor.rollSkill(selection, {event: ev, targetValue, fumble: -1, critical: 21});\n\t\t\t\t\t\tif(total >= targetValue) counter++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst materialValueCurrent = actor.getFlag(\"zhell-custom-stuff\", \"materia-medica.value\") ?? 0;\n\t\t\t\tawait actor.setFlag(\"zhell-custom-stuff\", \"materia-medica.value\", Math.clamped(materialValueCurrent + counter, 0, 999));\n\t\t\t\tChatMessage.create({\n\t\t\t\t\tspeaker: ChatMessage.getSpeaker({actor}),\n\t\t\t\t\tcontent: `${actor.name.split(\" \")[0]} went foraging for ${num} hours and gathered <strong>${counter} ${counter === 1 ? 'unit' : 'units'}</strong> of foraged materials (added to character sheet).`\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"go\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"FRHavFG1029uVyVE":3},"flags":{"core":{"sourceId":"Macro.Xxe1mcyquO5EKXRk"}}}
{"_id":"jxcdTwNECHuZuFg5","name":"Warpgate Spawn/Mutate","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/defensive/illusion-evasion-echo-purple.webp","scope":"global","command":"/* Find an NPC from any Actor compendium.\n * filter by type, cr, pack key.\n */\n\n\nconst typeOptions = Object.keys(CONFIG.DND5E.creatureTypes).reduce((acc, e) => acc += `<option value=\"${e}\">${e}</option>`, ``);\nconst type = `<select id=\"type\"><option></option>${typeOptions}</select>`;\n\nconst challenge = `<input type=\"text\" id=\"challenge\"/>`;\n\nconst packOptions = game.packs.filter(i => i.metadata.type === \"Actor\" && i.metadata.package === \"zhell-custom-stuff\").sort((a,b) => (a.title < b.title) ? -1 : (a.title > b.title) ? 1 : 0).reduce((acc, e) => acc += `<option value=\"${e.collection}\">${e.title}</option>`, ``);\nconst pack = `<select id=\"pack\">${packOptions}</select>`;\n\nconst defaultResults = `<option value=\"null\">&mdash;</option>`;\nconst results = `<select id=\"results\">${defaultResults}</select>`;\n\nconst content = `\n<form>\n <div class=\"form-group\">\n\t<label for=\"pack\">Compendium:</label>\n\t<div class=\"form-fields\">${pack}</div>\n </div>\n <div class=\"form-group\">\n\t<label for=\"challenge\">Challenge Rating:</label>\n\t<div class=\"form-fields\">${challenge}</div>\n </div>\n <div class=\"form-group\">\n\t<label for=\"type\">Creature Type:</label>\n\t<div class=\"form-fields\">${type}</div>\n </div>\n <div class=\"form-group\">\n\t<label for=\"filter\">Filter:</label>\n\t<div class=\"form-fields\"> <input type=\"text\" id=\"filter\"/> </div>\n </div>\n <div class=\"form-group\">\n\t<label for=\"results\">Results:</label>\n\t<div class=\"form-fields\">${results}</div>\n </div>\n ${false ? `<div class=\"form-group\">\n\t<label for=\"list\">Results:</label>\n\t<div class=\"form-fields\">\n\t\t<div> <input list=\"list\" id=\"list\"/> </div>\n\t</div>\n </div>` : \"\"}\n</form>`;\n\nnew Dialog({\n\ttitle: \"Find a monster\",\n\tcontent,\n\tbuttons: {\n\t\tspawn: {\n\t\t\ticon: `<i class=\"fas fa-arrow-left\"></i>`,\n\t\t\tlabel: \"Spawn!\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst pack = html[0].querySelector(\"select[id=pack]\").value.replace(\"zhell-custom-stuff.catalog-of-\", \"\");\n\t\t\t\tconsole.log(html[0].querySelector(\"select[id=pack]\").value, pack);\n\t\t\t\tconst name = html[0].querySelector(\"select[id=results]\").value;\n\t\t\t\tawait ZHELL.catalog.spawn(name, pack);\n\t\t\t}\n\t\t},\n\t\tmutate: {\n\t\t\ticon: `<i class=\"fas fa-arrow-right\"></i>`,\n\t\t\tlabel: \"Mutate!\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst pack = html[0].querySelector(\"select[id=pack]\").value.replace(\"zhell-custom-stuff.catalog-of-\", \"\");\n\t\t\t\tconst name = html[0].querySelector(\"select[id=results]\").value;\n\t\t\t\tawait ZHELL.catalog.mutate(name, pack);\n\t\t\t}\n\t\t}\n\t},\n\trender: async (html) => {\n\t\tconst packSelect = html[0].querySelector(\"select[id=pack]\");\n\t\tconst challengeInput = html[0].querySelector(\"input[id=challenge]\");\n\t\tconst typeSelect = html[0].querySelector(\"select[id=type]\");\n\t\tconst filter = html[0].querySelector(\"input[id=filter]\");\n\t\t\n\t\tpackSelect.addEventListener(\"change\", () => newFilter(html));\n\t\tchallengeInput.addEventListener(\"change\", () => newFilter(html));\n\t\ttypeSelect.addEventListener(\"change\", () => newFilter(html));\n\t\tfilter.addEventListener(\"change\", () => newFilter(html));\n\t},\n\tdefault: \"go\"\n}).render(true);\n\nasync function newFilter(html){\n\tconst pack = game.packs.get(html[0].querySelector(\"select[id=pack]\").value);\n\tlet challenge = html[0].querySelector(\"input[id=challenge]\").value;\n\tchallenge = Number(challenge.split('/').reduce((n, d, i) => n / (i ? d : 1)));\n\tconst type = html[0].querySelector(\"select[id=type]\").value;\n\tconst nameFilter = html[0].querySelector(\"input[id=filter]\").value;\n\t\n\tconst docs = await pack.getIndex({fields: [\"data.details.cr\", \"data.details.type.value\", \"name\"]});\n\tconst filter = docs.filter(i => i.type === \"npc\" && (!challenge || i.data.details.cr <= Number(challenge)) && (!type || i.data.details.type.value === type) && i.name.includes(nameFilter));\n\tconst options = filter.length ? filter.reduce((acc, e) => acc += `<option value=\"${e.name}\">${e.name}</option>`, ``) : defaultResults;\n\thtml[0].querySelector(\"select[id=results]\").innerHTML = options;\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.oUsO0kOWLyyrN14e"}}}
{"name":"Target Save and Damage","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/fire/projectile-fireball-orange-green.webp","scope":"global","command":"const style = `\n<style>\n\n.fancy-damage-label {\n\tflex: 1 !important;\n}\n\n.fancy-remove-button {\n\tfont-family: \"Font Awesome 5 Free\";\n}\n\n.fancy-add-button {\n\tfont-family: \"Font Awesome 5 Free\";\n}\n\n.fancy-remove-button i {\n\tmargin-right: 0;\n}\n\n.fancy-add-button i {\n\tmargin-right: 0;\n}\n\n</style>`;\n\n\nlet index = 0;\nconst options = Object.entries(CONFIG.DND5E.damageTypes).reduce((acc, [key, value]) => acc += `<option value=\"${key}\">${value}</option>`, ``);\nconst savingThrowOptions = Object.entries(CONFIG.DND5E.abilities).reduce((acc, [key, value]) => acc += `<option value=\"${key}\">${value}</option>`, `<option value=\"\">&mdash;</option>`);\nconst content = style + `\n<form>\n\t<div class=\"form-group\">\n\t\t<label class=\"fancy-damage-label\">Saving Throw?</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<select class=\"fancy-saving-throw-select\">${savingThrowOptions}</select>\n\t\t\t<input type=\"number\" class=\"fancy-dc-input\" value=\"15\">\n\t\t\t<input type=\"checkbox\" class=\"fancy-no-damage-on-save\">\n\t\t\t<span nowrap>No Damage On Success</span>\n\t\t</div>\n\t</div>\n\t<hr>\n\t<div class=\"form-group\" data-index=\"0\">\n\t\t<label class=\"fancy-damage-label\">Damage</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<input type=\"text\" class=\"fancy-damage-input\" data-index=\"0\">\n\t\t\t<button class=\"fancy-add-button\"><i class=\"fas fa-plus\"></i></button>\n\t\t</div>\n\t</div>\n</form>\n<hr>\n<p><em>Make sure you have the tokens <strong>targeted</strong>.</em></p>\n<hr>\n`;\nconst dialog = new Dialog({\n\ttitle: \"Apply Damage\",\n\tcontent,\n\tbuttons: {\n\t\tgo: {\n\t\t\ticon: `<i class=\"fas fa-poo-storm\"></i>`,\n\t\t\tlabel: \"Poo Storm\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst inputs = [];\n\t\t\t\tfor(let i = 0; i <= index; i++){\n\t\t\t\t\t// get values.\n\t\t\t\t\tconst damage = html[0].querySelector(`.fancy-damage-input[data-index='${i}']`)?.value;\n\t\t\t\t\tconst type = html[0].querySelector(`.fancy-type-input[data-index='${i}']`)?.value;\n\t\t\t\t\t// if found, add to array.\n\t\t\t\t\tif(damage) inputs.push([damage, type]);\n\t\t\t\t}\n\t\t\t\tconst savingThrow = html[0].querySelector(\".fancy-saving-throw-select\").value;\n\t\t\t\tconst targetValue = html[0].querySelector(\".fancy-dc-input\").value;\n\t\t\t\tconst noDamageOnSuccess = html[0].querySelector(\".fancy-no-damage-on-save\").checked;\n\t\t\t\t\n\t\t\t\t// if no saving throw, just apply damage to each target.\n\t\t\t\tif(!savingThrow){\n\t\t\t\t\tfor(let t of game.user.targets){\n\t\t\t\t\t\tawait ZHELL.token.damage(t, inputs, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// if saving throw,\n\t\t\t\telse{\n\t\t\t\t\tconst ev = event;\n\t\t\t\t\tconst inputsHalved = inputs.map(([damage, type]) => [`floor((${damage})/2)`, type]);\n\t\t\t\t\tfor(let t of game.user.targets){\n\t\t\t\t\t\t// roll save.\n\t\t\t\t\t\tconst {total} = await t.actor.rollAbilitySave(savingThrow, {event: ev, targetValue: Number(targetValue)});\n\t\t\t\t\t\t\n\t\t\t\t\t\t// was it a success?\n\t\t\t\t\t\tconst success = total >= Number(targetValue);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// apply damage based on saving throw.\n\t\t\t\t\t\tif(success && noDamageOnSuccess) continue;\n\t\t\t\t\t\telse if(success) await ZHELL.token.damage(t, inputsHalved, false);\n\t\t\t\t\t\telse await ZHELL.token.damage(t, inputs, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"go\",\n\trender: (html) => {\n\t\t// create any initial inputs depending on dr, di, dv.\n\t\tconst initials = createInitialInputs();\n\t\t// if 0 initial inputs were created, create a single input.\n\t\tif(!initials) createInputs();\n\t\t// add event listener to the add button.\n\t\thtml[0].querySelector(\".fancy-add-button\").addEventListener(\"click\", () => createInputs());\n\t\t// auto-focus on the first input.\n\t\thtml[0].querySelector(\".fancy-damage-input[data-index='0']\").focus();\n\t}\n}).render(true);\n\nfunction createInputs(type){\n\tconst dialogHTML = dialog.element[0];\n\tconst el = document.createElement(\"DIV\");\n\tel.setAttribute(\"class\", \"form-group\");\n\tel.setAttribute(\"data-index\", index+1);\n\tconst opt = !type ? options : `<option value=\"${type}\">${(CONFIG.DND5E.damageTypes[type] ?? type)}</option>`;\n\tconst disabled = !!type ? \"disabled\" : \"\";\n\tel.innerHTML = `\n\t\t<label class=\"fancy-damage-label\">Damage</label>\n\t\t<div class=\"form-fields\">\n\t\t\t<input type=\"text\" class=\"fancy-damage-input\" data-index=\"${index+1}\">\n\t\t\t<select class=\"fancy-type-input\" data-index=\"${index+1}\" ${disabled}>${opt}</select>\n\t\t\t<button class=\"fancy-remove-button\" data-index=\"${index+1}\"><i class=\"fas fa-minus\"></i></button>\n\t\t</div>`;\n\tconst content = dialogHTML.querySelector(\".dialog-content > form\");\n\tcontent.appendChild(el);\n\tindex++;\n\tdialogHTML.style.height = \"auto\";\n\tconst currInd = index;\n\tdialogHTML.querySelector(`.fancy-remove-button[data-index=\"${currInd}\"]`).addEventListener(\"click\", () => removeInputs(currInd));\n}\n\nfunction createInitialInputs(){\n\tif(!game.user.targets.size) return 0;\n\t\n\t// all the types that any of the targets might be resistant/vulnerable/immune to.\n\tconst types = new Set();\n\t\n\tfor(let target of game.user.targets){\n\t\tconst {di, dr, dv} = target.actor.data.data.traits;\n\t\t\n\t\tfor(let {value, custom} of [di, dr, dv]){\n\t\t\tif(value) for(let val of value) types.add(val);\n\t\t\tif(custom) for(let val of custom.split(\";\")) if(!!val) types.add(val);\n\t\t}\n\t}\n\t\n\t// create DISABLED, and PRESET inputs.\n\tif(types.size){\n\t\tconst typesSorted = Array.from(types).sort((a, b) => a.localeCompare(b));\n\t\tfor(let type of typesSorted) createInputs(type);\n\t}\n\treturn types.size;\n}\n\nfunction removeInputs(ind){\n\tconst elmt = dialog.element[0].querySelector(`.form-group[data-index=\"${ind}\"]`);\n\tif(elmt) elmt.remove();\n}","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.5SmGfHhD9yu1KEzf"}},"_id":"li2FdyfCEozbuyQD"}
{"_id":"pFnkMIqoivKjFJTQ","name":"Request Players Saving Throw","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/skills/targeting/crosshair-arrowhead-blue.webp","scope":"global","command":"// dialog to request saving throw.\n// pick type, pick dc, enter description (optional)\n\nconst options = Object.entries(CONFIG.DND5E.abilities).reduce((acc, [a,b]) => acc += `<option value=\"${a}\">${b}</option>`, ``);\nconst content = `\n  <form>\n    <div class=\"form-group\">\n      <label for=\"type\">Saving Throw</label>\n      <div class=\"form-fields\">\n        <select id=\"type\">${options}</select>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"dc\">Difficulty</label>\n      <div class=\"form-fields\">\n        <input id=\"dc\" type=\"number\" min=\"1\" step=\"1.0\"></input>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"desc\">Description</label>\n      <div class=\"form-fields\">\n        <input id=\"desc\" type=\"text\"></input>\n      </div>\n    </div>\n  </form>`;\n\nnew Dialog({\n\ttitle: \"Request Saving Throw\",\n\tcontent,\n\tbuttons: {\n\t\tyes: {\n\t\t\ticon: \"<i class='fas fa-check'></i>\",\n\t\t\tlabel: \"Request\",\n\t\t\tcallback: async (html) => {\n\t\t\t\tconst type = html[0].querySelector(\"#type\").value;\n\t\t\t\tconst dc = html[0].querySelector(\"#dc\").value;\n\t\t\t\tconst description = html[0].querySelector(\"#desc\").value ?? undefined;\n\t\t\t\tif(!dc) return ui.notifications.error(\"Invalid DC.\");\n\t\t\t\t\n\t\t\t\tconst label = `Saving Throw DC ${dc} ${CONFIG.DND5E.abilities[type]}`;\n\t\t\t\tconst action = async () => { await actor.rollAbilitySave(args.type) };\n\t\t\t\tconst buttonData = [{label, action, type}];\n\t\t\t\tconst img = \"systems/dnd5e/icons/svg/scale-value.svg\";\n\t\t\t\tconst title = \"Saving Throw\";\n\t\t\t\tawait Requestor.request({buttonData, description, img, title});\n\t\t\t}\n\t\t}\n\t},\n\tdefault: \"yes\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.BkHLKHx1yWa9n8dx"}}}
{"_id":"wI4GBdmxQnpHl3GQ","name":"Mayhem!","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/skills/melee/strike-flail-destructive-yellow.webp","scope":"global","command":"// mayhem macro.\n// save mayhem dice on user in a flag.\n// max: number of players.\n// min: 0.\n\nif(!game.user.isGM) return ui.notifications.error(\"Mayhem is for GMs only!\");\n\nconst value = game.user.getFlag(\"world\", \"mayhem.value\") ?? 0;\nconst max = 5;\n\nnew Dialog({\n  title: \"Mayhem!\",\n  content: `\n    <p>When a player is reduced to zero hit points, or killed outright, the DM earns one point of inspiration.\n    The points stack to a maximum of <strong>${max}</strong> points.</p>\n    <p style=\"text-align:center\">You currently have <strong>${value}</strong> points.</p>\n    <hr>`,\n  buttons: {\n    earn: {\n      icon: `<i class=\"fas fa-arrow-up\"></i>`,\n      label: \"Earn a point\",\n      callback: async () => {\n        if(value >= max) return ui.notifications.info(\"You cannot earn more points.\");\n        const newValue = Math.min(value + 1, max);\n        await game.user.setFlag(\"world\", \"mayhem.value\", newValue);\n        return ChatMessage.create({\n          user: game.user.id,\n          content: `\n            <hr>\n            <p><strong><em>Mayhem.</em></strong> The GM has gained one point of inspiration.</p>\n            <p>Current stack: <strong>${newValue}</strong></p>\n            <hr>`\n        });\n      }\n    },\n    spend: {\n      icon: `<i class=\"fas fa-arrow-down\"></i>`,\n      label: \"Spend a point\",\n      callback: async () => {\n        if(value < 1) return ui.notifications.info(\"You have no points to spend.\");\n        const newValue = Math.max(0, value - 1);\n        await game.user.setFlag(\"world\", \"mayhem.value\", newValue);\n        return ChatMessage.create({\n          user: game.user.id,\n          content: `\n            <hr>\n            <p><strong><em>Mayhem.</em></strong> The GM has spent one point of inspiration.</p>\n            <p>Current stack: <strong>${newValue}</strong></p>\n            <hr>`\n        });\n      }\n    }\n  },\n  default: value > 0 ? \"spend\" : \"earn\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"mM9Gw0AoWFaq5rLx":3,"ssK6qqhMHUvM1A06":3},"flags":{"exportSource":{"world":"test-world","system":"dnd5e","coreVersion":"9.269","systemVersion":"1.6.1"},"core":{"sourceId":"Macro.iNN8kMn0x88xl5LS"}}}
{"_id":"xdOflRv0onHGTRhd","name":"Advance Time","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/magic/time/clock-stopwatch-white-blue.webp","scope":"global","command":"const title = \"Advance time\";\nconst content = `\n <p style=\"text-align:center\">Advance time by a number of seconds.</p>\n <hr>\n <form>\n  <div class=\"form-group\">\n   <label for=\"input\">Seconds</label>\n   <div class=\"form-fields\">\n    <input type=\"number\" id=\"input\"></input>\n   </div>\n  </div>\n </form>`;\nnew Dialog({\n title,\n content,\n buttons: {\n  adv: {\n   icon: `<i class=\"fas fa-check\"></i>`,\n   label: \"Advance\",\n   callback: async (html) => {\n    const time = Number(html[0].querySelector(\"input[id=input]\").value);\n    if(!isNaN(time)) await game.time.advance(time);\n    else return;\n    ui.notifications.info(`Advanced time by ${time} seconds.`);\n   }\n  }\n },\n default: \"adv\"\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"core":{"sourceId":"Macro.tY64QuLeOM9eS5LF"}}}
{"_id":"ztbWOEfM8BPs0cTI","name":"_place FOUR RAYS at the same time","type":"script","author":"ssK6qqhMHUvM1A06","img":"icons/svg/dice-target.svg","scope":"global","command":"async function wait(ms) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\nfunction toDegrees(rads) {\n    return (rads * 180 / Math.PI) + 90;\n}\n\nif(!token) return ui.notifications.info(\"no token selected\")\n\nconst rayLengthFt = 30;\nconst rayLengthPx = canvas.grid.size * rayLengthFt / canvas.scene.data.gridDistance;\nconst startPoint = {x: token.center.x, y: token.center.y};\nlet angle = 0;\nlet start = 0;\nlet request;\nconst fill = game.user.data.color;\n\nfunction coordX(k){\n\tif(k === 0 || k === 2) return 0;\n\tif(k === 1) return -rayLengthPx;\n\tif(k === 3) return rayLengthPx;\n}\nfunction coordY(k){\n\tif(k === 1 || k === 3) return 0;\n\tif(k === 0) return rayLengthPx;\n\tif(k === 2) return -rayLengthPx;\n}\n\nasync function onLoad(){\n    //let rayLine = new PIXI.Graphics();\n    //rayLine.position.set(startPoint.x, startPoint.y);\n    //rayLine.lineStyle(15, fill.replace(\"#\",\"0x\"), 0.5)\n    //   .moveTo(0, 0)\n    //   .lineTo(0, rayLengthPx);\n    //rayLine.name = \"tempRay\";\n    //canvas.app.stage.addChild(rayLine);\n    //requestAnimationFrame(step);\n\t\n\t\n\tlet rayLine = [new PIXI.Graphics(),new PIXI.Graphics(),new PIXI.Graphics(),new PIXI.Graphics()];\n\tfor(let i = 0; i < 4; i++){\n\t\tlet r = rayLine[i];\n\t\tawait r.position.set(startPoint.x, startPoint.y);\n\t\tawait r.lineStyle(15, fill.replace(\"#\",\"0x\"), 0.5)\n\t\t\t.moveTo(0,0)\n\t\t\t.lineTo(coordX(i),coordY(i));\n\t\tr.name = `tempRay${i+1}`;\n\t\tcanvas.app.stage.addChild(r);\n\t\trequestAnimationFrame(step);\n\t} \n\t\n}\n\n\nfunction step(timestamp) {\n    let marker = [\n\t\tcanvas.app.stage.children.find(c => c.name == \"tempRay1\"),\n\t\tcanvas.app.stage.children.find(c => c.name == \"tempRay2\"),\n\t\tcanvas.app.stage.children.find(c => c.name == \"tempRay3\"),\n\t\tcanvas.app.stage.children.find(c => c.name == \"tempRay4\")\n\t];\n    if (start === 0) start = timestamp;\n    const elapsed = timestamp - start;\n    const mousePos = canvas.app.renderer.plugins.interaction.mouse.getLocalPosition(canvas.app.stage);\n    angle = mousePos.x === startPoint.x ? toDegrees(Math.PI / 2): \n                  mousePos.x > startPoint.x ? toDegrees(Math.PI - Math.atan((startPoint.y - mousePos.y)/(mousePos.x - startPoint.x))):\n                  mousePos.x < startPoint.x ? toDegrees(Math.atan((mousePos.y - startPoint.y)/(mousePos.x - startPoint.x))) : 0;//Math.ceil(elapsed * 360 / 1000);\n    marker[0].angle = angle;\n\tmarker[1].angle = angle;\n\tmarker[2].angle = angle;\n\tmarker[3].angle = angle;\n\t\n    if (elapsed < 1000) request = requestAnimationFrame(step);\n    else { \n        start = 0;\n        console.log(angle)\n        request = requestAnimationFrame(step);\n    }\n}\n\nfunction offSet(angle){\n\tconst halfGrid = canvas.grid.size / 2;\n\tconst angleR = Math.round((angle % 360)/45)*45;\n\tconsole.log(angleR);\n\tlet x, y;\n\t\n\tswitch(angleR){ // set x offset first\n\t\tcase 0:\n\t\tcase 180:\n\t\tcase 360:\n\t\t\tx = 0;\n\t\t\tbreak;\n\t\tcase 45:\n\t\tcase 90:\n\t\tcase 135:\n\t\t\tx = -halfGrid;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tx = halfGrid;\n\t}\n\tswitch(angleR){ // set y offset\n\t\tcase 0:\n\t\tcase 45:\n\t\tcase 315:\n\t\tcase 360:\n\t\t\ty = halfGrid;\n\t\t\tbreak;\n\t\tcase 135:\n\t\tcase 180:\n\t\tcase 225:\n\t\t\ty = -halfGrid;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ty = 0;\n\t}\n\t\n\tconsole.log(x);\n\tconsole.log(y);\n\t\n\treturn [x,y];\n}\n\nawait PIXI.Loader.shared\n    .load(onLoad);\n\nawait wait(500);\n\n$(document.body).on(\"click\", async () => {\n    $(document.body).off(\"click\");\n    cancelAnimationFrame(request);\n    canvas.app.stage.removeChild(canvas.app.stage.children.find(c => c.name === 'tempRay1'));\n\tcanvas.app.stage.removeChild(canvas.app.stage.children.find(c => c.name === 'tempRay2'));\n\tcanvas.app.stage.removeChild(canvas.app.stage.children.find(c => c.name === 'tempRay3'));\n\tcanvas.app.stage.removeChild(canvas.app.stage.children.find(c => c.name === 'tempRay4'));\n\t\n\tlet template_data_array = [];\n\t\n\tfor(let i = 0; i < 4; i++){\n\t\ttemplate_data_array.push({\n\t\t\tt: 'ray',\n\t\t\tuser: game.userId,\n\t\t\tdirection: angle + 90*(i+1),\n\t\t\tdistance: rayLengthFt,\n\t\t\twidth: 5,\n\t\t\tx: startPoint.x + offSet(angle + 90*i)[0],\n\t\t\ty: startPoint.y + offSet(angle + 90*i)[1],\n\t\t\tborderColor: '#000000',\n\t\t\tfillColor: '#3898B9'\n\t\t});\n\t}\n\t\n\t//let template_data = {\n\t//\tt: 'ray',\n\t//\tuser: game.userId,\n\t//\tdirection: angle + 90,\n\t//\tdistance: rayLengthFt,\n\t//\twidth: 5,\n\t//\tx: startPoint.x + offSet(angle)[0],\n\t//\ty: startPoint.y + offSet(angle)[1],\n\t//\tborderColor: '#000000',\n\t//\tfillColor: '#3898B9'\n\t//};\n\tlet ranges = await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', template_data_array);\n});","folder":null,"sort":0,"permission":{"default":0,"ssK6qqhMHUvM1A06":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_4i202gw72r8","path":"[Unused/unfinished]","color":"#000000"},"core":{"sourceId":"Compendium.world.my-macros.Em2iHRl91wkrupdd"}}}
